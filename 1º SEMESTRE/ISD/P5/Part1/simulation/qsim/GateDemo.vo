// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "11/22/2021 21:01:07"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module GateDemo (
	outPort,
	inPort0,
	inPort1);
output 	outPort;
input 	inPort0;
input 	inPort1;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \outPort~output_o ;
wire \inPort0~input_o ;
wire \inPort1~input_o ;
wire \AND2_1~combout ;


cycloneive_io_obuf \outPort~output (
	.i(!\AND2_1~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\outPort~output_o ),
	.obar());
// synopsys translate_off
defparam \outPort~output .bus_hold = "false";
defparam \outPort~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \inPort0~input (
	.i(inPort0),
	.ibar(gnd),
	.o(\inPort0~input_o ));
// synopsys translate_off
defparam \inPort0~input .bus_hold = "false";
defparam \inPort0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \inPort1~input (
	.i(inPort1),
	.ibar(gnd),
	.o(\inPort1~input_o ));
// synopsys translate_off
defparam \inPort1~input .bus_hold = "false";
defparam \inPort1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb AND2_1(
// Equation(s):
// \AND2_1~combout  = (\inPort0~input_o  & \inPort1~input_o )

	.dataa(\inPort0~input_o ),
	.datab(\inPort1~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\AND2_1~combout ),
	.cout());
// synopsys translate_off
defparam AND2_1.lut_mask = 16'h8888;
defparam AND2_1.sum_lutc_input = "datac";
// synopsys translate_on

assign outPort = \outPort~output_o ;

endmodule
